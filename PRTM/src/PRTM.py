'''Contains solutions for PRTM and SPEC'''

import sys

sys.path.insert(0,'C:\\Users\\Matthew\\Desktop\\Python Projects\\Rosalind\\')

from RUtils.src.RosalindUtilities import RosalindUtilities

class PRTM:
    def __init__(self):
        self.ru = RosalindUtilities()

    def get_aa_monoisotropic_weight(self,aa):
        return self.ru.monoisotropic_mass_by_aa_code[aa]

    def get_protein_monoisotropic_weight(self,P):
        return round(sum([self.get_aa_monoisotropic_weight(aa) for aa in P]),3)

    def get_protein_by_prefix_spectrum(self,prefix_spectrum):
        return ''.join([self.ru.get_aa_by_monoisotopic_mass(prefix_spectrum[i+1]-prefix_spectrum[i]) for i in range(len(prefix_spectrum)-1)])

def Main():
    prtm = PRTM()
    P = 'YSDSPPGAMRFPPSASPYHTVEYWYRNLWRECPAMVKWIVKKMDRGDSAVFNDHPIEYKTTLGIAENFDCCPWSFRILDKAYHSPLDEAVDAMNLRQCHATQCCPGRAFMWMCPQDECGKMSRGRKVMNSLTWMDVRPAAKGQHCWAFLCFVMYVCGLKRKTETPTRSKRLQIKVYFVGLAQPRSDDHPYQISWWEPEATKNNMFMCFAQGRPQPGKDGLWKFLIGFAQMVMMDRQHIGWQCLEPVCSSRDVAIARACENSWVHWPYKVRNFQKTTKDQFWRKARVTDWAELPGLLGAPPKDEFEMPYLNDRTIKPEFGHGDHHKHYVMHFSFHQNCRDEDMVFTAWSLKAVNPNTDIAHIKGNNGVVTNEHPKYSSSKFSDPFWQRYLVQNDLMFRPCHPYYHMEDPRQYVTPKEARYNHYDRLEFKWVVTSQKGMASKYMRCHTACKPPFFHQELAALDWYTAWKEGHEHLLVIKGCNMKNIHMPCKINVQQCQRLMPPHGQCGWRTPLFQCTWAHLPFVSSFSANMVIGYSGATHGRLTKMFPRKRSKTNITMGSGVWKHASARPESWGIAKFLGFLQTSWPSFWSTQHHCGSMCKGGPGGKQNLKVLPQSHPLLQQPHTLYMQWTPHHWKKVWFYIVLCAMQEKVHELHCDVFLIGVRVWAFRYHQTHGVNHEHHYNPLTFRLMVGPDMTHMYVHLIHVDICHWACLDSDGDKEGTGPARFAIYTQQTMMSRNNQWCSTVYYGLYKEFCDCRLIACWTNCCVLNQCWDTTTEQDWPKAYRQRMQMWPGFCFNATHAYFAWFHIPKPVRTFSPCANHLFNPDTEPMNNSWWETMVADFFQWRAQLSHSAWMSHTMTVRHIYKDRVPRYDDWQPPPLTWWAIVWELLAALAECRGHVAQYHRHQPDMVRQYWLWANNENASQKEMTMSNSLVWIHYMWDSSNVLFRYAKHIGTLF'
    print(prtm.get_protein_monoisotropic_weight(P))
    prefix_spectrum = list(map(float,('''778.716603207
881.725793207
1010.76838321
1138.82696321
1251.91102321
1365.95395321
1422.97541321
1554.01590321
1611.03736321
1682.07447321
1838.17558321
1953.20252321
2067.24545321
2180.32951321
2293.41357321
2350.43503321
2453.44422321
2566.52828321
2669.53747321
2772.54666321
2900.60524321
3029.64783321
3157.74279321
3254.79555321
3391.85446321
3519.91304321
3647.97162321
3719.00873321
3875.10984321
3932.13130321
4029.18406321
4142.26812321
4328.34743321
4456.44239321
4543.47442321
4640.52718321
4743.53637321
4857.57930321
4914.60076321
4971.62222321
5084.70628321
5183.77469321
5254.81180321
5351.86456321
5466.89150321
5603.95041321
5732.00899321
5819.04102321
5948.08361321
6134.16292321
6233.23133321
6346.31539321
6443.36815321
6500.38961321
6614.43254321
6745.47303321
6844.54144321
6945.58912321
7032.62115321
7161.66374321
7289.72232321
7418.76491321
7549.80540321
7620.84251321
7735.86945321
7921.94876321
7978.97022321
8093.99716321
8197.00635321
8298.05403321
8385.08606321
8482.13882321
8596.18175321
8709.26581321
8822.34987321
8937.37681321
9074.43572321
9202.49430321
9317.52124321
9446.56383321
9574.65879321
9711.71770321
9814.72689321
9871.74835321
9972.79603321
10087.8229732
10158.8600832
10272.9030132
10435.9663432
10507.0034532
10670.0667832
10784.1097132
10913.1523032
11026.2363632
11139.3204232
    '''.split()
    )))
    print(prtm.get_protein_by_prefix_spectrum(prefix_spectrum))

if __name__ == '__main__':
    Main()