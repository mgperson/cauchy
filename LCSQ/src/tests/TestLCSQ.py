import unittest

from ..LCSQ import LCSQ

class TestLCSQ(unittest.TestCase):
    def setUp(self):
        self.lcsq = LCSQ()
        self.s = 'AACCTTGG'
        self.t = 'ACACTGTGA'
        self.u = self.lcsq.get_longest_common_subsequence(self.s, self.t)
        self.s2 = 'CGGTGCAATACATCGCTTGGCTGGTGACTCTTACCTCCGCCGTACACTCTTCCCACGCCGTCTTCCCAGGCGCACTGCTAAGGATTGCAACTGGAGTAGTTAGAGAATATGGACTATGAACACTTTATTCTTTTGGCACTAAGGGTGGTCAAACGAATGTTCCTCAAGCCCGTACCGAAAACCTTAAGGATCAGCCTTTCGGGCTCAGGAGAAGTCCGTCAGTTAGTCGGTCCTGGCCCGAAAAATTCTTGTAAGGAAGTCGGGGTACCTTGTACCGTGTGGGATGATCGAGATTACCAAAAGCTCTGGTGCTAATACTGTTCAGGAGCCATGGTACTATCACGGCGAGAACTAAATGCGCTCCGCCCGTTATAATTGACGTTTGGCCGGCTAAAGTACTTTCGTATGAGGGAACTGTCTCCTGACATGGCTGAATGTCGCACTATGTCTGTAGACGGGATGCTGCTAGCAATGTTAGAGACCTGAGTACGGACCGAGATACTCTTTAACGTCCTGAAAAGTCTGCTCAGCTCGCGACGGGCACAAATGTTCAGAGGGTCCGCAGCCATCTAAGATATTTGGAGCAATGAAGCGAACTTACATAATTGGATAGCAGTATAAGAGACCTCTTTGATGGTTCTCCATGTCGCGAAACAGACCGCTGTACGAATATCTACAGGCCATCCCACACCTAGACCTAGCCGTCATGGATTATACTCAGACTCAACTCAAGACATCCGCAAAAATGTCGCCTGGGATTCTGATTCTTATAGAAAGTAGGAGCTGTACCCAGGAGCCCGATGCCTTCGCTAGCAGGTATAGTAGCTTTGCTTCGCACGTACACAAGTCCTTTGGGCTTTATTATTGAAACCATGTTCGTAGTGAAGTTCGCCTCAAGCAACGTTATCGTGTAAAAGTGGTCG'
        self.t2 = 'CCTGGCCGGAAGCCTTATCGAAAGGCAAAGAAACGGAGTAAAATTGCTCCCGGTGAAGGCGTTTACGCTGTCTTTAGCGGTCCTTACGATTGAATGTTTGGAAGTACACTAGGAGCCGATAGCCCTTGGATAGAGGGCAGAATACAAAGGACACAATGAGTTTTTCTAACACCATCATTCACGTTGCGATTACAGTTCCGTTTCAGCAACTTTCACTCCAATCTCTTCATACGCGACTTAGGTCATGCGGTAATTAACAGCGCGCCACGTTTGCAAAGCTACTTGTGTATGGGAAGGGGGGGCTTCACTTTCTCTGAGTATGATCACGCATACGAAAGCAAGGCTGTAGAAACGCCTTTCCTAAGCGCGGACGTTATAGTTATGTGCGGCCTCCGTCCTCTTATAGCGGATCAGAAGTGCACCACACTATTGACCCTGCACACGTACACAGCTAAACGGCGTTTCCCTTCCAGCGGTAGCTTCAGCGTGCCGCACGCTGACGTAATAAGATTGCGGGCGGAGTCTTTCCACTACCTCTCTCGCGGAGCTACCATCCACTAGGCGGTGGTTCTTCATCCACTTATAAGAAGTGCAGAGTTATGCTGGAGTTATTAGTCCCCATGGGCATATATTCCTCATAACTCGTGACTTACCGGCCGGCGACCTTAGCGATTTTCCTTCCGGTTGGCGCTCTAAACCTATAGCAGGACTGTAGTACACAGGACAACTTCTCTGATGGGACTCATGGTCAGACCCTGGACTCTTCCTCTTTAGCCAATAGACGTCGCGGCCTCTCAACGTTTTAAGCTGTAATCCTGA'
        self.u2 = self.lcsq.get_longest_common_subsequence(self.s2, self.t2)
        pass

    def test_is_subsequence(self):
        self.assertTrue(self.lcsq.is_subsequence('abcdef','ace'))
        self.assertFalse(self.lcsq.is_subsequence('racecar','acra'))

    #@unittest.skip('Skip for now')
    def test_get_longest_common_subsequence(self):
        self.assertEqual(self.lcsq.get_longest_common_subsequence('A', ''), '')
        self.assertEqual(self.lcsq.get_longest_common_subsequence('AC', 'C'), 'C')

    def test_is_lcsq_result_subsequence(self):
        self.assertTrue(self.lcsq.is_subsequence(self.s,self.u))
        self.assertTrue(self.lcsq.is_subsequence(self.t,self.u))
        self.assertTrue(self.lcsq.is_subsequence(self.s2, self.u2))
        self.assertTrue(self.lcsq.is_subsequence(self.t2, self.u2))

    def test_is_lcsq_result_length_correct(self):
        self.assertEqual(len(self.u),6)
        self.assertEqual(len(self.u2),560)



