#Matt Person
#Rosalind Problem: HAMM
#source
'''Given: Two DNA strings s and t of equal length (not exceeding 1 kbp).
Return: The Hamming distance dH(s,t).'''
import os
import sys
sys.path.insert(0,'C:\\Users\\Matthew\\Desktop\\Python Projects\\Rosalind\\')

from RUtils.src.RosalindUtilities import RosalindUtilities

class HAMM:
    def __init__(self,s,t):
        self.hamming_distance = sum(1 for a,b in zip(s,t) if a!=b)

def main():

    first_string = 'AATTCGCCATTCGAGATGTTCATACAGCCGTCGTCCTAAAACGGATGGCCCGAGGCGTTCAGGGAGGATTGAGGCTCCCATGCCAGACGCACTTGCTGAGTATAATGGCCCAAAGCTTCTGTTCGCATTGTCGTCCGTCGTAAGCCCGATTTATGCAGGTACGAGGTAAACTCTAGCCAGGTTACAAACAATAAGATGAGGTAAGCTGGAATCTCACTGAGCTAAGACTGTATGAGGATGCCTTCCTCAAGTCGCGGGGATTTCTCAACCGAATGATAAGGCACACAATAAGATCCAGGTATAACTTGCTAGTAATGGGACAAGCGGTGCACTGCGATAGTGAAGAACCCGCAATATCGAAGAATTAGAGTCCCCTTTTATTTGGCGCAAAATCCGAATCGAGACGTGGTTTCGCGATAGCAAAAAACGGACCCGAGATTACTATAGTTTCCACAATTAAAGCCAAGGCAAACTGTAGACCAAGCGGATCTATTCGTTCCGACCGACCCTTGTACCACTGAGGCTGGGCGCATAGGTAGGGATGTAACCGCAAAACAAACTACCAATACAGTGCCCATTGGGGGCGAGGGGGTAACGTTGCGAATTACTATTGCGACTCTAACAAGGTGCGACCTTAACCCGTGGGTACCAACGCTCCGTCGCGTCAATTCCTCCTTTATTTTGTCATAGAATTGGCGTCGTACTCGCAGGATTTCTGTAAACAGATACTAAGAACCTAGCATGCGGTAGACACCCACAAGTTGCGAATCATTATATCGGCACCTTGCTCTTATGTTTTTTTGAGAAATCACACTGTATCTTCAAGATTGAGCAACCATTCTGTTTACGGGATAGTTGTTTGACCTTCCTAGCAGTTCGGAGTGGATTCTCCCCGGTGGCCTTTTTCA'
    second_string = 'TCGTCGCTATTTGATGGGTACTCTGAGTCGTCGTCATACGGTAACTGTGACGACTGGGCCTGGGTGATTTCTCTGTCCTTTCCGAAAAACGCCTGCTGAGTGTCATGGTCACAAGTGCCGCCTAGATTCGACTAGGGTCCGGAACCCAATTTGCTCTTGGCCCAGGTAGTATGTTTTACGGTTTCACATAATAATTCGAGTCCAACCTGAAACCTACCCTGCGAATACTGTACCTGGAGTCCATCCCCACGAGTCGGACCCTCTCCCATCAAAGGATACGAAACCACATCGGTGCTGTGGAAAACCCACACCTTGTCTGAAGAACTTGCCAATAGGTCAGTAAACTTCCCGCCATGCCCTAGAAATAGAGTCATCTTCAATACGAAACAAAATCCGAACCTGGGCGTCGTTCTCTGATAGCAAAATCAGACGTTACGAAAACTGTATATTCTAATATAATAGCCTAGGCATGAGGTAGATTCTGTCGACCGCTCCCTCCCCCCCGCCCCCTACCCAACCAACGCTTACCTCATTGTTATCGAGGTACCACGCAACCCATTAGCCACCACGATACCCCTTGGGGACGACGCGGCCTATTTGGGCATGGATAATCGGGCTATACTAGCCAGCTTCCTTGGCCAGTAGTTGGGAAGCAGCAATTCCCGGCTGTCTACACATCTCTTGTACTCGAATCGCCGTCGCGAGCGAGGACTTTCACCACGGACATTCTACGGACTTAGTCGCCTCACACAATCAACTATGGGTGAAGTTTCATAGGGGCACGCATCTCTAGAAAACTGTTGGGGTACCACGCCTACTAGGCAAGTCTATGCGGAGGACCCTATTATCGGACAGTCCAATCAACGCCCCAGCAGCTGATAGGGGGAACTCAGAGTCTGCACTTGTTG'
    cm = HAMM(first_string,second_string)
    print(cm.hamming_distance)

if __name__ == '__main__':
    main()